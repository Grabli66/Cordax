// Generated by Haxe 4.0.0-preview.4+1e3e5e0
(function ($global) { "use strict";
var $hxEnums = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
Math.__name__ = ["Math"];
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
var cordax_Cordax = function() { };
cordax_Cordax.__name__ = ["cordax","Cordax"];
cordax_Cordax.registerViewElement = function(view,element) {
	var k = view.id;
	var _this = cordax_Cordax.views;
	if(__map_reserved[k] != null) {
		_this.setReserved(k,element);
	} else {
		_this.h[k] = element;
	}
};
cordax_Cordax.run = function(view) {
	cordax_Cordax.render = new cordax_native_html_HtmlRender();
	var root = view.toElement();
	cordax_Cordax.render.render(root);
};
cordax_Cordax.partialRender = function(view) {
	var key = view.id;
	var _this = cordax_Cordax.views;
	var oldElement = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	var newElement = view.toElement();
	cordax_Cordax.render.replace(oldElement,newElement);
};
cordax_Cordax.renderDialog = function(dialog) {
	cordax_Cordax.render.renderDialog(dialog.toElement());
};
cordax_Cordax.setTitle = function(title) {
	window.document.getElementsByTagName("title")[0].innerText = title;
};
var cordax_ui_View = function() {
	this.id = cordax_ui_Guid.generate();
};
cordax_ui_View.__name__ = ["cordax","ui","View"];
cordax_ui_View.prototype = {
	get_name: function() {
		var fullName = Type.getClassName(js_Boot.getClass(this));
		var items = fullName.split(".");
		return items[items.length - 1];
	}
	,setState: function() {
		cordax_Cordax.partialRender(this);
	}
	,showDialog: function(settings) {
		cordax_Cordax.renderDialog(settings.builder());
	}
	,render: function() {
		return null;
	}
	,toElement: function() {
		var res = new cordax_native_RootElement(this);
		var child = this.render();
		if(child != null) {
			res.addChild(child.toElement());
		}
		return res;
	}
	,__class__: cordax_ui_View
};
var cordax_layouts_Column = function(settings) {
	cordax_ui_View.call(this);
	this.settings = settings;
};
cordax_layouts_Column.__name__ = ["cordax","layouts","Column"];
cordax_layouts_Column.__super__ = cordax_ui_View;
cordax_layouts_Column.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		var _g = 0;
		var _g1 = this.settings.childs;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			res.addChild(child.toElement());
		}
		return res;
	}
	,__class__: cordax_layouts_Column
});
var cordax_layouts_Row = function(settings) {
	cordax_ui_View.call(this);
	this.settings = settings;
};
cordax_layouts_Row.__name__ = ["cordax","layouts","Row"];
cordax_layouts_Row.__super__ = cordax_ui_View;
cordax_layouts_Row.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		var _g = 0;
		var _g1 = this.settings.childs;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			res.addChild(child.toElement());
		}
		return res;
	}
	,__class__: cordax_layouts_Row
});
var cordax_native_Element = function(name,id) {
	if(id == null) {
		id = "";
	}
	this.css = [];
	this.childArray = [];
	this.name = name;
	this.id = id;
};
cordax_native_Element.__name__ = ["cordax","native","Element"];
cordax_native_Element.prototype = {
	get_childs: function() {
		return HxOverrides.iter(this.childArray);
	}
	,addChild: function(child) {
		this.childArray.push(child);
	}
	,update: function() {
		this.render.update(this);
	}
	,__class__: cordax_native_Element
};
var cordax_native_RootElement = function(view) {
	cordax_native_Element.call(this,view.get_name(),view.id);
	cordax_Cordax.registerViewElement(view,this);
};
cordax_native_RootElement.__name__ = ["cordax","native","RootElement"];
cordax_native_RootElement.__super__ = cordax_native_Element;
cordax_native_RootElement.prototype = $extend(cordax_native_Element.prototype,{
	__class__: cordax_native_RootElement
});
var cordax_native_IRender = function() { };
cordax_native_IRender.__name__ = ["cordax","native","IRender"];
cordax_native_IRender.prototype = {
	__class__: cordax_native_IRender
};
var cordax_native_html_ViewPair = function(view,element) {
	this.view = view;
	this.element = element;
};
cordax_native_html_ViewPair.__name__ = ["cordax","native","html","ViewPair"];
cordax_native_html_ViewPair.prototype = {
	__class__: cordax_native_html_ViewPair
};
var cordax_native_html_HtmlRender = function() {
};
cordax_native_html_HtmlRender.__name__ = ["cordax","native","html","HtmlRender"];
cordax_native_html_HtmlRender.__interfaces__ = [cordax_native_IRender];
cordax_native_html_HtmlRender.prototype = {
	applyToHtmlElement: function(element,htmlElement) {
		var elementName = element.name.toLowerCase();
		htmlElement.classList.add(elementName);
		var _g = 0;
		var _g1 = element.css;
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			htmlElement.classList.add(css);
		}
		if(element.text != null) {
			htmlElement.innerText = element.text;
		}
		if(element.onClick != null) {
			htmlElement.onclick = element.onClick;
		}
	}
	,createHtmlElement: function(element) {
		var htmlElement = window.document.createElement("div");
		element.render = this;
		element.nativeElement = htmlElement;
		this.applyToHtmlElement(element,htmlElement);
		return htmlElement;
	}
	,renderChildsRecursive: function(root,element) {
		var child = element.get_childs();
		while(child.hasNext()) {
			var child1 = child.next();
			var childDiv = this.createHtmlElement(child1);
			this.renderChildsRecursive(childDiv,child1);
			root.appendChild(childDiv);
		}
	}
	,render: function(root) {
		console.log("src/cordax/native/html/HtmlRender.hx:84:","RENDER");
		window.document.body.innerHTML = "";
		this.dialogElement = null;
		var rootElement = this.createHtmlElement(root);
		this.renderChildsRecursive(rootElement,root);
		window.document.body.appendChild(rootElement);
	}
	,renderDialog: function(root) {
		console.log("src/cordax/native/html/HtmlRender.hx:99:","RENDER DIALOG");
		if(this.dialogElement != null) {
			this.dialogElement.remove();
		}
		this.dialogElement = window.document.createElement("div");
		this.dialogElement.id = "dialogs";
		window.document.body.appendChild(this.dialogElement);
		var overlay = window.document.createElement("div");
		overlay.className = "overlay";
		overlay.onclick = function() {
			console.log("src/cordax/native/html/HtmlRender.hx:109:","CLICK");
			return;
		};
		this.dialogElement.appendChild(overlay);
		var rootElement = this.createHtmlElement(root);
		this.renderChildsRecursive(rootElement,root);
		this.dialogElement.appendChild(rootElement);
	}
	,update: function(element) {
		console.log("src/cordax/native/html/HtmlRender.hx:123:","UPDATE");
		var htmlElement = element.nativeElement;
		this.applyToHtmlElement(element,htmlElement);
	}
	,replace: function(oldElement,newElement) {
		console.log("src/cordax/native/html/HtmlRender.hx:132:","REPLACE");
		var htmlElement = oldElement.nativeElement;
		var parent = htmlElement.parentElement;
		var rootElement = this.createHtmlElement(newElement);
		this.renderChildsRecursive(rootElement,newElement);
		parent.replaceChild(rootElement,htmlElement);
	}
	,__class__: cordax_native_html_HtmlRender
};
var cordax_ui_App = function() {
	cordax_ui_View.call(this);
};
cordax_ui_App.__name__ = ["cordax","ui","App"];
cordax_ui_App.__super__ = cordax_ui_View;
cordax_ui_App.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		res.css.push("application");
		var child = this.render();
		if(child != null) {
			res.addChild(child.toElement());
		}
		return res;
	}
	,__class__: cordax_ui_App
});
var cordax_ui_AppBar = function(settings) {
	cordax_ui_View.call(this);
	this.settings = settings;
};
cordax_ui_AppBar.__name__ = ["cordax","ui","AppBar"];
cordax_ui_AppBar.__super__ = cordax_ui_View;
cordax_ui_AppBar.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		if(this.settings != null) {
			if(this.settings.title != null) {
				var titleElement = this.settings.title.toElement();
				res.addChild(titleElement);
			}
		}
		return res;
	}
	,__class__: cordax_ui_AppBar
});
var cordax_ui_Button = function(settings) {
	cordax_ui_View.call(this);
	this.settings = settings;
};
cordax_ui_Button.__name__ = ["cordax","ui","Button"];
cordax_ui_Button.__super__ = cordax_ui_View;
cordax_ui_Button.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		res.text = this.settings.text;
		res.onClick = this.settings.onClick;
		return res;
	}
	,__class__: cordax_ui_Button
});
var cordax_ui_Dialog = function() {
	cordax_ui_View.call(this);
};
cordax_ui_Dialog.__name__ = ["cordax","ui","Dialog"];
cordax_ui_Dialog.__super__ = cordax_ui_View;
cordax_ui_Dialog.prototype = $extend(cordax_ui_View.prototype,{
	__class__: cordax_ui_Dialog
});
var cordax_ui_SimpleDialog = function(settings) {
	cordax_ui_Dialog.call(this);
	this.settings = settings;
};
cordax_ui_SimpleDialog.__name__ = ["cordax","ui","SimpleDialog"];
cordax_ui_SimpleDialog.__super__ = cordax_ui_Dialog;
cordax_ui_SimpleDialog.prototype = $extend(cordax_ui_Dialog.prototype,{
	toElement: function() {
		var res = new cordax_native_RootElement(this);
		res.onClick = function() {
			return { };
		};
		var header = new cordax_native_Element("header");
		var title = this.settings.title.toElement();
		title.css.push("title");
		header.addChild(title);
		res.addChild(header);
		var content = this.settings.content.toElement();
		res.addChild(content);
		return res;
	}
	,__class__: cordax_ui_SimpleDialog
});
var cordax_ui_Scaffold = function(settings) {
	cordax_ui_View.call(this);
	this.settings = settings;
};
cordax_ui_Scaffold.__name__ = ["cordax","ui","Scaffold"];
cordax_ui_Scaffold.__super__ = cordax_ui_View;
cordax_ui_Scaffold.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		cordax_Cordax.setTitle(this.settings.title);
		var res = new cordax_native_RootElement(this);
		if(this.settings.appBar != null) {
			var appbarElement = this.settings.appBar.toElement();
			res.addChild(appbarElement);
		}
		var content = this.settings.content.toElement();
		res.addChild(content);
		return res;
	}
	,__class__: cordax_ui_Scaffold
});
var cordax_ui_ViewModel = function() {
	this.changed = new haxe_ds_StringMap();
};
cordax_ui_ViewModel.__name__ = ["cordax","ui","ViewModel"];
cordax_ui_ViewModel.prototype = {
	notify: function(name,value) {
		var v = value;
		var _this = this.changed;
		var value1 = v;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value1);
		} else {
			_this.h[name] = value1;
		}
		this.isDirty = true;
	}
	,apply: function() {
		if(this.onChange != null && this.isDirty) {
			this.onChange(this.changed);
			this.isDirty = false;
		}
	}
	,__class__: cordax_ui_ViewModel
};
var cordax_ui_TextModel = function() {
	cordax_ui_ViewModel.call(this);
};
cordax_ui_TextModel.__name__ = ["cordax","ui","TextModel"];
cordax_ui_TextModel.__super__ = cordax_ui_ViewModel;
cordax_ui_TextModel.prototype = $extend(cordax_ui_ViewModel.prototype,{
	set_text: function(value) {
		this.notify("text",value);
		return this.text = value;
	}
	,__class__: cordax_ui_TextModel
});
var cordax_ui_Text = function(settings) {
	var _gthis = this;
	cordax_ui_View.call(this);
	this.settings = settings;
	if(this.settings.model != null) {
		this.settings.model.onChange = function(changed) {
			if(_gthis.textElement == null) {
				return;
			}
			var changeKey = changed.keys();
			while(changeKey.hasNext()) {
				var changeKey1 = changeKey.next();
				var value = __map_reserved[changeKey1] != null ? changed.getReserved(changeKey1) : changed.h[changeKey1];
				if(changeKey1 == "text") {
					_gthis.textElement.text = value;
				}
			}
			_gthis.textElement.update();
			return;
		};
	}
};
cordax_ui_Text.__name__ = ["cordax","ui","Text"];
cordax_ui_Text.__super__ = cordax_ui_View;
cordax_ui_Text.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		this.textElement = new cordax_native_RootElement(this);
		this.textElement.text = this.settings.text;
		return this.textElement;
	}
	,__class__: cordax_ui_Text
});
var cordax_ui_Guid = function() { };
cordax_ui_Guid.__name__ = ["cordax","ui","Guid"];
cordax_ui_Guid.generate = function() {
	var result = "";
	var _g = 0;
	while(_g < 32) {
		var j = _g++;
		if(j == 8 || j == 12 || j == 16 || j == 20) {
			result += "-";
		}
		result += StringTools.hex(Math.floor(Math.random() * 16));
	}
	return result.toUpperCase();
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var mobile_$web_MyApp = function() {
	cordax_ui_App.call(this);
	this.count = 1;
	this.textModel = new cordax_ui_TextModel();
};
mobile_$web_MyApp.__name__ = ["mobile_web","MyApp"];
mobile_$web_MyApp.__super__ = cordax_ui_App;
mobile_$web_MyApp.prototype = $extend(cordax_ui_App.prototype,{
	render: function() {
		var _gthis = this;
		this.caption = "Clicked: " + this.count;
		return new cordax_ui_Scaffold({ title : "App", appBar : new cordax_ui_AppBar({ title : new cordax_ui_Text({ text : "Test app"})}), content : new cordax_layouts_Column({ childs : [new cordax_ui_Text({ model : this.textModel, text : this.caption}),new cordax_ui_Button({ text : "Click me!", onClick : function() {
			_gthis.count += 1;
			_gthis.caption = "Clicked: " + _gthis.count;
			_gthis.showDialog({ builder : function() {
				return new cordax_ui_SimpleDialog({ title : new cordax_ui_Text({ text : "Users"}), content : new cordax_ui_Text({ text : "Hello"})});
			}, onClose : function() {
				console.log("test/mobile_web/Main.hx:50:","CLOSE");
				return;
			}});
			return;
		}})]})});
	}
	,__class__: mobile_$web_MyApp
});
var mobile_$web_Main = function() {
};
mobile_$web_Main.__name__ = ["mobile_web","Main"];
mobile_$web_Main.main = function() {
	var app = new mobile_$web_Main();
	app.start();
};
mobile_$web_Main.prototype = {
	render: function() {
		cordax_Cordax.run(new mobile_$web_MyApp());
	}
	,start: function() {
		this.render();
	}
	,__class__: mobile_$web_Main
};
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
var __map_reserved = {};
cordax_Cordax.views = new haxe_ds_StringMap();
js_Boot.__toStr = ({ }).toString;
mobile_$web_Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
