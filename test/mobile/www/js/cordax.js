// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function () { "use strict";
var $hxEnums = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var cordax_Cordax = function() { };
cordax_Cordax.run = function(view) {
	var document = new cordax_Document();
	cordax_Cordax.render = new cordax_native_html_HtmlRender();
	document.onChange = function() {
		cordax_Cordax.render.render(document);
		return;
	};
	document.set_root(view);
};
cordax_Cordax.setTitle = function(title) {
	window.document.getElementsByTagName("title")[0].innerText = title;
};
var cordax_Document = function() {
	this.set_isDirty(false);
};
cordax_Document.prototype = {
	get_root: function() {
		return this.rootView;
	}
	,set_root: function(value) {
		this.rootView = value;
		this.set_isDirty(true);
		return value;
	}
	,get_isDirty: function() {
		return this.isDirtyInternal;
	}
	,set_isDirty: function(value) {
		this.isDirtyInternal = value;
		if(this.onChange != null) {
			this.onChange();
		}
		this.isDirtyInternal = false;
		return this.isDirtyInternal;
	}
};
var cordax_native_Element = function(name) {
	this.name = name;
	this.childArray = [];
};
cordax_native_Element.prototype = {
	get_childs: function() {
		return HxOverrides.iter(this.childArray);
	}
	,addChild: function(child) {
		this.childArray.push(child);
	}
};
var cordax_native_IRender = function() { };
var cordax_native_html_HtmlRender = function() {
};
cordax_native_html_HtmlRender.__interfaces__ = [cordax_native_IRender];
cordax_native_html_HtmlRender.prototype = {
	createHtmlElement: function(element) {
		var res = window.document.createElement("div");
		if(element.text != null) {
			res.innerText = element.text;
		}
		return res;
	}
	,render: function(document) {
		console.log("src/cordax/native/html/HtmlRender.hx:29:","RENDER");
		var element = document.get_root().toElement();
		window.document.body.innerHTML = "";
		var root = this.createHtmlElement(element);
		var child = element.get_childs();
		while(child.hasNext()) {
			var child1 = child.next();
			var childDiv = this.createHtmlElement(child1);
			root.appendChild(childDiv);
		}
		window.document.body.appendChild(root);
	}
};
var cordax_ui_View = function() { };
cordax_ui_View.prototype = {
	render: function() {
		return null;
	}
	,toElement: function() {
		var res = new cordax_native_Element("");
		var childView = this.render();
		if(childView != null) {
			res.addChild(childView.toElement());
		}
		return res;
	}
};
var cordax_ui_App = function(settings) {
	this.settings = settings;
};
cordax_ui_App.__super__ = cordax_ui_View;
cordax_ui_App.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		cordax_Cordax.setTitle(this.settings.title);
		var res = new cordax_native_Element("");
		res.addChild(this.settings.content.toElement());
		return res;
	}
});
var cordax_ui_Text = function(settings) {
	this.settings = settings;
};
cordax_ui_Text.__super__ = cordax_ui_View;
cordax_ui_Text.prototype = $extend(cordax_ui_View.prototype,{
	toElement: function() {
		var res = new cordax_native_Element("");
		res.text = this.settings.text;
		return res;
	}
});
var mobile_Main = function() {
};
mobile_Main.main = function() {
	var app = new mobile_Main();
	app.start();
};
mobile_Main.prototype = {
	render: function() {
		var app = new cordax_ui_App({ title : "App", content : new cordax_ui_Text({ text : "Test text"})});
		cordax_Cordax.run(app);
	}
	,start: function() {
		this.render();
	}
};
mobile_Main.main();
})();
